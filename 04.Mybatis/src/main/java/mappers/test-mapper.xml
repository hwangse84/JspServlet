<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="testmapper">
<!--namespace.id  
ex)testmapper.selecttest

resultType=결과 타입 추후 DTO가 들어감

select 태그는 반드시 id와 resultType을 가진다-->

  <select id="select1" resultType="Integer">
    select  7 from dual
  </select>
  
  <select id="select2" resultType="String">
   select 'abc'||'def' from dual
  </select>
  
  <select id="selectVO" resultType="mybatis.MybatisVO">
  select 'abc' param1,'def'param2  from dual 
  </select>
  <!-- UNION, UNION ALL, MINUS
   UNION : 연결된 두 셀렉트문의 결과 중 중복행을 제거후 출력
   UMION ALL : 위와 같으나 중복행 제거가 없어 더 빠름
   MINUS : 비교 후 첫번뺴 결과에만 있는 데이터 출력(X)<-JOIN -->
   
   <select id="selectVOList" resultType="mybatis.MybatisVO">
   select 'abc' param1, 'def' param2 from dual
   UNION ALL
   select 'ABC' param1, 'DEF' param2 from dual
   </select>
   <!-- 단일 파라미터 : String, int 등의 변수 하나값 
                   매개변수에 대한 매핑을 위치기반으로 판단하므로(position-based-mapping)
                    변수명이 별로 중요하지 않음
        다중 파라미터 : VO등으로 여러개의 값을 가진경우
        #{param} : ex) where param == #{param}->where param ='파라메터'
                       :이것을 더 많이사용
        ${param} : ex)where param == ${param}->where param=파라메터
        
        -->
    <select id="param1" resultType="String">
  select #{param} str from dual
    </select>
   
   <select id="param2" resultType="Integer">
   select #{param}+10 num from dual
   </select>
   
   <select id="params" resultType="mybatis.MybatisVO">
   select #{param1}||'db' param1,#{param2}||'db' param2 from dual
   </select>
   
   
 <insert id="insert" >
 
 INSERT INTO MYBATISTBL (COL1) VALUES ('cont')

 </insert>
   
   <!--cont에서 contupdate로 바꿈  -->
   <update id="update">
   UPDATE MYBATISTBL SET DOL2 = COL1||'UPDATE' WHERE COL1='cont'
   </update>
   
   
   <delete id="delete">
   delete from MYBATISTBL where COL1='cons'
   </delete>
</mapper>



